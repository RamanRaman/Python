.eqv Ln 9                                    #Указали длину массива
.macro push (%rg)                             #Создали макроопределение push
	sw %rg,($sp)                          #Записали в регистр
	subiu $sp,$sp,4                       #Вычли 4
.end_macro                                    #Закончить макроопределение 
.macro pop (%rg)                              #Создали макроопределение pop
	addiu $sp,$sp,4                       #Прибавили 4
	lw %rg,($sp)                          #Записали в память
.end_macro                                    #Закончить макроопределение
.data
A:        .byte 10                            # Заданное число для сравнения
B:        .byte 31,-22,3,1,1,-10,42,9,4,44    # Входящий массив для обработки
C:   .byte 0                                  # Зарезервированная ячейка под количество чисел, больших А
.text
main:                                         # Начальные операции
	  push ($a0)                          #Сохраняем состояние регистров в стеке
	  push ($a1)                          #Сохраняем состояние регистров в стеке
	  push ($v0)                          #Сохраняем состояние регистров в стеке
          la $t0,B                            # Загружаем в регистр адрес первого элемента массива
          lb $t2,A                            # Загружаем в регистр заданное число
          move $t3,$zero                      # Инициализируем счетчик цикла
          move $t4,$zero                      # Инициализируем счетчик чисел, больших заданного
          jal prc                             #Обращаемся к подпрограмме
          sb $t4,C                            # Сохраняем результат
          pop ($v0)                           #Восстанавливаем состояние регистров из стека
	  pop ($a1)                           #Восстанавливаем состояние регистров из стека
	  pop ($a1)                           #Восстанавливаем состояние регистров из стека
          addiu $v0,$zero,10                  # Загрузка номера системного вызова (10 - выход)
          syscall                             # Системный вызов
prc:                                          #Здесь должны быть команды подпрограммы
          addu $v0,$zero,$zero                #Сбрасываем значение суммы
          or $t1,$zero,$zero                  #Сбрасываем счетчик цикла
	  lp:                                 # Тело цикла
          	  bgt $t3,Ln,stop             # Переходим на режим остановки в случае, когда прошли весь массив
          	  lb $at,($t0)                # Загружаем в временный регистр элемент из адреса $t0
          	  addi $t3,$t3,1              # Увеличиваем счетчик цикла
          	  addi $t0,$t0,1              # Увеличиваем адрес
          	  blt $t2,$at,lp              # Переходим в блок увелечиния счетчика чисел, больше заданного
          	  addi $t4,$t4,1              # Увеличиваем счетчик чисел, больших заданного
         	  b lp                        # Возвращаемся на начало цикла
stop:                                         #Выход из подпрограммы
	  jr $31                              #Возврат к программен

