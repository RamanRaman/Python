#Доступ к элементам массива
	.data 
A:	.byte 8, 3, 14, 9, 111                         #Программа выводит количество чисел меньше заданного числа 
B:	.byte 13
C:	.byte 0
#Здесь могут размещаться глобальные переменные
	.text 
#Здесь могут размещаться описания макросов и подпрограмм программы
main:	#Программа будет запускаться с этой метки
	la $t0,A        #Загружаем адрес массива в регистр
	lb $t1,B        #Загружаем наше число, которое будем проверять
	lb $t5,C        #Создаем пустой регистр куда будем записывать результат
	
	lbu $at,($t0)    #Загружаем первый элемент
	addiu $t0,$t0,1  #Продвигаем указатель на элемент
	slt $t2,$at,$t1  #Проверяет, является ли один регистр меньше другого.
	add $t3,$t2,0    #В регистр $t3 положить сумму $t2,0
	
	lbu $at,($t0)    #Загружаем второй элемент
	addiu $t0,$t0,1  #Продвигаем указатель на элемент
	slt $t2,$at,$t1  #Проверяет, является ли один регистр меньше другого.
	addu $t4,$t3,$t2 #В регистр $t4 положить сумму $t3,$t2
	
	lbu $at,($t0)    #Загружаем третий элемент
	addiu $t0,$t0,1  #Продвигаем указатель на элемент
	slt $t2,$at,$t1  #Проверяет, является ли один регистр меньше другого.
	addu $t3,$t4,$t2 #В регистр $t3 положить сумму $t4,$t2
	
	lbu $at,($t0)    #Загружаем четвертый элемент
	addiu $t0,$t0,1  #Продвигаем указатель на элемент
	slt $t2,$at,$t1  #Проверяет, является ли один регистр меньше другого.
	addu $t4,$t3,$t2 #В регистр $t4 положить сумму $t3,$t2
	
	lbu $at,($t0)    #Загружаем пятый элемент
	addiu $t0,$t0,1  #Продвигаем указатель на элемент
	slt $t2,$at,$t1  #Проверяет, является ли один регистр меньше другого.
	addu $t3,$t4,$t2 #В регистр $t3 положить сумму $t4,$t2
	
	addu $t5,$t3,0   #В регистр $t5 положить сумму $t3,0
	sb $t5,C         #Выводит количество чисел меньше заданного числа 
#Здесь могут размещаться команды 
	addiu $v0,$zero,10  # Загрузка номера системного вызова (10 - выход)
	syscall             # Системный вызов
