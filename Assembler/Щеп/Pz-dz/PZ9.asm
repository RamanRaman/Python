#Передача параметров в подпрограмму через регистры и использование макросов.
.eqv Ln 6
.macro push (%rg)
	sw %rg,($sp)
	subiu $sp,$sp,4
.end_macro 
.macro pop (%rg)
	addiu $sp,$sp,4
	lw %rg,($sp)
.end_macro 
	.data 
Arr:	.byte 1,2,3,4,5,6 #Массив
Smm:	.byte 0         #Сумма элементов
	.text
main:
	push ($a0)#Сохраняем состояние регистров в стеке
	push ($a1)
	push ($v0)
	la $a0,Arr	    #Загружаем в регистр адрес массива				
	li $a1,Ln           #Загружаем в регистр длину массива
	jal prc             #Переход к подпрограмме prc
	sb $v0,Smm          #Сохранение результата
	pop ($v0)#Восстанавливаем состояние регистров из стека
	pop ($a1)
	pop ($a1)
	li $v0,10	    # Загрузка номера системного вызова (10 - выход)
	syscall             # Системный вызов
	
prc:	#Здесь должны быть команды подпрограммы
	addu $v0,$zero,$zero #Сбрасываем значение суммы
lp:    #Начало тела цикла
	lbu $at,($a0)        #Загружаем в регистр аt очередной элемент
	addu $v0,$v0,$at     #Прибавляем значение элемента к сумме	
	addi $a0,$a0,1       #Увеличиваем значение адреса на длину элемента
	subi $a1,$a1,1       #Уменьшаем счетчик цикла на единицу
	bnez $a1,lp          #Если счетчик цикла не равен нулю, повторяем тело цикла 
	jr $31		     #Возврат из подпрограммы
